cmake_minimum_required(VERSION 2.6.0)
SET(PROGNAME "coveragescanner")
INCLUDE(../commoncode/common.cmake)

  set(SRCS
      coveragescanner.cpp
  )


# Don't forget to include output directory, otherwise
# the UI file won't be wrapped!
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})



INCLUDE_DIRECTORIES(../commoncode ../libcsmes ../libcoveragescanner)
if(WIN32)
  set(RESOURCES coveragescanner.rc)
endif(WIN32)
#Now add these generated files to the ADD_EXECUTABLE step
# If this is NOT done, then the ui_*.h files will not be generated
ADD_EXECUTABLE(${PROGNAME} ${RESOURCES} ${SRCS} )
TARGET_LINK_LIBRARIES(${PROGNAME} coveragescannerlib csmes ${PLATFORM_LIBS})

IF(UNIX)
      IF (NOT ${CMAKE_CURRENT_SOURCE_DIR} STREQUAL ${CMAKE_CURRENT_BINARY_DIR})
      ADD_CUSTOM_COMMAND(
            TARGET ${PROGNAME}
            POST_BUILD
            COMMAND ${CMAKE_COMMAND} -E remove -f ${CMAKE_CURRENT_BINARY_DIR}/csg++-4.0 ${CMAKE_CURRENT_BINARY_DIR}/csgcc-4.0 ${CMAKE_CURRENT_BINARY_DIR}/csgcc ${CMAKE_CURRENT_BINARY_DIR}/csg++ ${CMAKE_CURRENT_BINARY_DIR}/ranlib.sh ${CMAKE_CURRENT_BINARY_DIR}/csar ${CMAKE_CURRENT_BINARY_DIR}/csld ${CMAKE_CURRENT_BINARY_DIR}/csmcs ${CMAKE_CURRENT_BINARY_DIR}/csgmcs ${CMAKE_CURRENT_BINARY_DIR}/csicc ${CMAKE_CURRENT_BINARY_DIR}/csicpc
            COMMAND cp ${CMAKE_CURRENT_SOURCE_DIR}/*.cspro ${CMAKE_CURRENT_BINARY_DIR} 
            COMMAND cp ${CMAKE_CURRENT_SOURCE_DIR}/gcc.cspro ${CMAKE_CURRENT_BINARY_DIR}/gcc-3.3.cspro
            COMMAND cp ${CMAKE_CURRENT_SOURCE_DIR}/g++.cspro ${CMAKE_CURRENT_BINARY_DIR}/g++-3.3.cspro
            COMMAND cp ${CMAKE_CURRENT_SOURCE_DIR}/gxx.cspro ${CMAKE_CURRENT_BINARY_DIR}/gxx-3.3.cspro
            COMMAND cp ${CMAKE_CURRENT_SOURCE_DIR}/gcc.cspro ${CMAKE_CURRENT_BINARY_DIR}/gcc-4.0.cspro
            COMMAND cp ${CMAKE_CURRENT_SOURCE_DIR}/g++.cspro ${CMAKE_CURRENT_BINARY_DIR}/g++-4.0.cspro
            COMMAND cp ${CMAKE_CURRENT_SOURCE_DIR}/gxx.cspro ${CMAKE_CURRENT_BINARY_DIR}/gxx-4.0.cspro
            COMMAND cp ${CMAKE_CURRENT_SOURCE_DIR}/gcc.cspro ${CMAKE_CURRENT_BINARY_DIR}/gcc-4.6.cspro
            COMMAND cp ${CMAKE_CURRENT_SOURCE_DIR}/g++.cspro ${CMAKE_CURRENT_BINARY_DIR}/g++-4.6.cspro
            COMMAND cp ${CMAKE_CURRENT_SOURCE_DIR}/gxx.cspro ${CMAKE_CURRENT_BINARY_DIR}/gxx-4.6.cspro
            COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME} ${CMAKE_CURRENT_BINARY_DIR}/csg++-4.6
            COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME} ${CMAKE_CURRENT_BINARY_DIR}/csgxx-4.6
            COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME} ${CMAKE_CURRENT_BINARY_DIR}/csgcc-4.6
            COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME} ${CMAKE_CURRENT_BINARY_DIR}/csg++-4.0
            COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME} ${CMAKE_CURRENT_BINARY_DIR}/csgxx-4.0
            COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME} ${CMAKE_CURRENT_BINARY_DIR}/csgcc-4.0
            COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME} ${CMAKE_CURRENT_BINARY_DIR}/csgcc
            COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME} ${CMAKE_CURRENT_BINARY_DIR}/csg++
            COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME} ${CMAKE_CURRENT_BINARY_DIR}/csgxx
            COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_CURRENT_SOURCE_DIR}/ranlib.sh ${CMAKE_CURRENT_BINARY_DIR}/ranlib.sh
            COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME} ${CMAKE_CURRENT_BINARY_DIR}/csar
            COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME} ${CMAKE_CURRENT_BINARY_DIR}/csld
            COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME} ${CMAKE_CURRENT_BINARY_DIR}/csmcs
            COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME} ${CMAKE_CURRENT_BINARY_DIR}/csgmcs
            COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME} ${CMAKE_CURRENT_BINARY_DIR}/csicc
            COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME} ${CMAKE_CURRENT_BINARY_DIR}/csicpc
            )
      ENDIF()
      FILE(GLOB csprolist ${CMAKE_CURRENT_SOURCE_DIR}/*.cspro)
      INSTALL(FILES ${csprolist} DESTINATION bin)
      FOREACH(csprofile ${csprolist})
        GET_FILENAME_COMPONENT(csproname "${csprofile}" NAME)
        STRING(REGEX REPLACE "(.*)\\.cspro" "cs\\1" csexe "${csproname}")
        INSTALL(PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME} DESTINATION bin RENAME ${csexe})
      ENDFOREACH(csprofile)
      INSTALL(PROGRAMS ${CMAKE_CURRENT_SOURCE_DIR}/ranlib.sh DESTINATION bin)
ELSE()
	ADD_CUSTOM_COMMAND(
	      TARGET ${PROGNAME}
	      POST_BUILD
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME}.exe ${CMAKE_CURRENT_BINARY_DIR}/cslink.exe
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME}.exe ${CMAKE_CURRENT_BINARY_DIR}/cslib.exe
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME}.exe ${CMAKE_CURRENT_BINARY_DIR}/cscl.exe
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME}.exe ${CMAKE_CURRENT_BINARY_DIR}/csld.exe
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME}.exe ${CMAKE_CURRENT_BINARY_DIR}/cscsc.exe
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME}.exe ${CMAKE_CURRENT_BINARY_DIR}/csgcc.exe
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME}.exe ${CMAKE_CURRENT_BINARY_DIR}/csmcs.exe
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME}.exe ${CMAKE_CURRENT_BINARY_DIR}/csgmcs.exe
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME}.exe ${CMAKE_CURRENT_BINARY_DIR}/csg++.exe
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME}.exe ${CMAKE_CURRENT_BINARY_DIR}/csccblkfn.exe
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/gcc.cspro ${CMAKE_CURRENT_BINARY_DIR} 
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/g++.cspro ${CMAKE_CURRENT_BINARY_DIR} 
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/cl.cspro ${CMAKE_CURRENT_BINARY_DIR} 
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/ld.cspro ${CMAKE_CURRENT_BINARY_DIR} 
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/lib.cspro ${CMAKE_CURRENT_BINARY_DIR} 
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/link.cspro ${CMAKE_CURRENT_BINARY_DIR} 
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/mcs.cspro ${CMAKE_CURRENT_BINARY_DIR} 
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/gmcs.cspro ${CMAKE_CURRENT_BINARY_DIR}
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/csc.cspro ${CMAKE_CURRENT_BINARY_DIR} 
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/ccblkfn.cspro ${CMAKE_CURRENT_BINARY_DIR} 
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME}.exe ${CMAKE_CURRENT_BINARY_DIR}/visualstudio/link.exe
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME}.exe ${CMAKE_CURRENT_BINARY_DIR}/visualstudio/cl.exe
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME}.exe ${CMAKE_CURRENT_BINARY_DIR}/visualstudio/lib.exe
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/cl.cspro ${CMAKE_CURRENT_BINARY_DIR}/visualstudio/cl.cspro
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/lib.cspro ${CMAKE_CURRENT_BINARY_DIR}/visualstudio/lib.cspro
	      COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/link.cspro ${CMAKE_CURRENT_BINARY_DIR}/visualstudio/link.cspro
	      )
      FILE(GLOB csprolist ${CMAKE_CURRENT_SOURCE_DIR}/*.cspro)
      INSTALL(FILES ${csprolist} DESTINATION bin)
      FOREACH(csprofile ${csprolist})
        GET_FILENAME_COMPONENT(csproname "${csprofile}" NAME)
        STRING(REGEX REPLACE "(.*)\\.cspro" "cs\\1" csexe "${csproname}")
        INSTALL(PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME}.exe DESTINATION bin RENAME ${csexe}.exe)
      ENDFOREACH(csprofile)
      INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME}.exe DESTINATION bin/visualstudio RENAME cl.exe)
      INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME}.exe DESTINATION bin/visualstudio RENAME link.exe)
      INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/${PROGNAME}.exe DESTINATION bin/visualstudio RENAME lib.exe)
      INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/cl.cspro ${CMAKE_CURRENT_SOURCE_DIR}/lib.cspro ${CMAKE_CURRENT_SOURCE_DIR}/link.cspro DESTINATION bin/visualstudio)



ENDIF()
IF (WIN32)
   set_property(TARGET ${PROGNAME} PROPERTY FOLDER "executables")
ENDIF()

INCLUDE(../commoncode/install.cmake)
