cmake_minimum_required(VERSION 2.6.0)

include("commoncode/version.cmake")
include("commoncode/common.cmake")

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/commoncode/version.nsh.cmake ${CMAKE_CURRENT_SOURCE_DIR}/commoncode/version.nsh)
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/commoncode/version.sh.cmake ${CMAKE_CURRENT_SOURCE_DIR}/commoncode/version.sh)
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/commoncode/version.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/commoncode/version.h)

IF(UNIX)
  ENABLE_TESTING()
ENDIF()
add_subdirectory("libcsmes")
add_subdirectory("libinstrumentation")
add_subdirectory("libcmmerge")
add_subdirectory("libcmreport")
add_subdirectory("libcmcsexeimport")
add_subdirectory("toolselector")
add_subdirectory("libcoveragebrowser")
add_subdirectory("coveragebrowser")
add_subdirectory("cmmerge")
add_subdirectory("cmcsexeimport")
add_subdirectory("cmreport")
add_subdirectory("libcoveragescanner")
add_subdirectory("coveragescanner")


SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "TestCocoon")
SET(CPACK_PACKAGE_VENDOR "Me, myself, and I")
#SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/ReadMe.txt")
SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE.TXT")
SET(CPACK_PACKAGE_VERSION_MAJOR ${TESTCOCOON_VERSION_MAJOR})
SET(CPACK_PACKAGE_VERSION_MINOR ${TESTCOCOON_VERSION_MINOR})
SET(CPACK_PACKAGE_VERSION_PATCH ${TESTCOCOON_VERSION_PATCH})
set(CPACK_SOURCE_GENERATOR "TGZ;TZ")
SET(CPACK_SOURCE_PACKAGE_FILE_NAME "TestCocoon_src_${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}")
INCLUDE(CPack)
